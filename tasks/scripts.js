'use strict';

const config = require('./config.js'),
        buildConfig = config.get(),
        gulp = require('gulp'),
        concat = require('gulp-concat-util'),
        scriptConfig = buildConfig.scripts,
        buildTaskPrefix = scriptConfig.buildTaskPrefix,
        concatTaskPrefix = scriptConfig.concatTaskPrefix,
        lintTaskPrefix = scriptConfig.lintTaskPrefix,
        watchTaskPrefix = scriptConfig.watchTaskPrefix,
        scriptTasks = scriptConfig.tasks,
        concatenateTasks = scriptTasks.map(t => `${concatTaskPrefix}${t.name}`);

// function generateLintTask(c) {
//     let sassLintOptions = {};
//     if (c.lintOptions) {
//         sassLintOptions = c.lintOptions;
//     }

//     gulp.task(`${lintTaskPrefix}${c.name}`, function () {
//       return gulp.src(c.lintPaths)
//         .pipe(sassLint(sassLintOptions))
//         .pipe(sassLint.format());
//     });
// }

function generateConcatenateTask(c) {
    gulp.task(`${concatTaskPrefix}${c.name}`, function() {
        return gulp.src(c.sourcePaths)
            .pipe(concat(c.outputFilename))
            .pipe(concat.header('// DO NOT EDIT: This file is automatically generated by the project\'s build task'))
            .pipe(gulp.dest(c.outputPath));
    });
}

// Dynamically generate compile, lint, and watch tasks
scriptTasks.forEach(function(c){
    // const buildLintTask = c.lintPaths;

    // if (buildLintTask) {
    //     generateLintTask(c);
    // }

    generateConcatenateTask(c);
    // generatePostprocessTask(c);
    // generateBuildTask(c);
    // generateWatchTask(c);
});

gulp.task(`${concatTaskPrefix}all`, gulp.parallel(concatenateTasks));

